
- add profile/detail uniqueness constraints

- ask if you broke MVC with looking_for
- ask about proper place to store constants
- add flash
  - style flash
- figure out the irrelevant question issue (write a validation and remove irrelevant?)
- deletion
- restructure w/ routes for different tabs; you don't need to get fancy

## always use rails helpers for img, JS, CSS

- figure out a way to not constantly hammer the db via current_user
- collect and fix before_filters for proper users

Actual Backbone layout:
- Navs all around
- On main page, tabs for About/Photo/Questions


Need matchbox on:
- User show
- matches

ACTUAL TO-DOS:
1. Maps!
2. Stylin'
3. Model tests
4. Sort matches by match%
5. About/Questions need to be tabs... just make them different pages?
6. Fix javascript vars to be camelcase
7. User submitting q on their own page doesn't redirect

0. PUT EVERYTHING ON ONE USER PAGE AND MAKE IT EDITABLE :(
  - Answering questions won't redirect because the partial is always xhr
  - So you gotta do that

Other's responses view swapping:
Load in:
- Either answer display or question with answer button

- On button hit:
  - Switch to form

- On submit:
  - Send it up and create or update response, use data sent back to...

- Just question with answer button
  - Class showing if !user.answered_questions.include?(response.answer)
- Comparison between answers with re-answer button (link?)
  - Class showing if user.answered_questions.include?(response.answer)
- Form to answer question
  - Never initially showing


- On creating a response:
  - render back comparison partial

- On answer

- NEED: Reanswer on other user's
- Everything on your own

- On reanswer: class to show form, replace form with edit partial
- On submit: fire that shit up, send back and replace comparison and show it